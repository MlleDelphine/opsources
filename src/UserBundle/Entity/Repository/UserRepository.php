<?php

namespace UserBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use UserBundle\Entity\User;

/**
 * UserRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function findAllExcept(User $user)
    {
        $qb = $this->createQueryBuilder('u')
            ->where('u.id <> :uid')
            ->setParameter(':uid', $user->getId());

        return $qb;
    }

    public function findOneByQuery(User $user)
    {
        $qb = $this->createQueryBuilder('u')
            ->where('u.id = :uid')
            ->setParameter('uid', $user->getId());

        return $qb;
    }

    public function findUsersWithManager()
    {
        $qb = $this->createQueryBuilder('u');
        $result = $qb
            ->where($qb->expr()->isNotNull('u.manager'))
            ->getQuery()->getResult();
        return $result;
    }

    public function getUsersForExport(){
        $objects = $this->findBy(array(),array('id'=>'ASC'));

        $data = array();

        foreach($objects AS $value){
            $line = array($value->getId(),$value->getFirstname(),$value->getLastname());
            array_push($data,$line);
        }

        $headers = array('ID','Firstname','Lastname');

        return array($headers,$data);
    }

    public function getJobsByUserForExport(){
        $objects = $this->findBy(array(),array('lastName'=>'ASC','firstName'=>'ASC'));

        $data = array();

        foreach($objects AS $value){
            $line = array($value->getLastname(),$value->getFirstname(),$value->getJob(),$value->getJob2());
            array_push($data,$line);
        }

        $headers = array('Nom','Prenom', 'Metier 1', 'Metier 2');

        return array($headers,$data);
    }

    public function getWithUsername(){
        $qb = $this->createQueryBuilder('u');
        $results = $qb
            ->orderBy('u.lastName', 'ASC')
            ->getQuery()->getResult();

        return $results;
    }

}
